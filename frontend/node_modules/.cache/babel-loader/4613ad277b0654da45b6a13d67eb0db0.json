{"ast":null,"code":"import Axios from 'axios';\nimport { PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS } from \"../constants/productConstants\";\nexport const listProducts = (keyword = '') => async dispatch => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await axios.get(`/api/products?keyword=${keyword}`);\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const detailsProduct = productId => async dispatch => {\n  dispatch({\n    type: PRODUCT_DETAILS_REQUEST,\n    payload: productId\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/${productId}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProduct = () => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/products', {}, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteProduct = productId => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_DELETE_REQUEST,\n    payload: productId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.delete(`/api/products/${productId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateProduct = product => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_UPDATE_REQUEST,\n    payload: product\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.put(`/api/products/${product._id}`, product, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      error: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/i 5/Desktop/myweb/frontend/src/actions/productActions.js"],"names":["Axios","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","listProducts","keyword","dispatch","type","data","axios","get","payload","error","message","detailsProduct","productId","response","createProduct","getState","userSignin","userInfo","post","headers","Authorization","token","product","deleteProduct","delete","updateProduct","put","_id"],"mappings":"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","sourcesContent":["import Axios from 'axios';\r\nimport {\r\n \r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n} from \"../constants/productConstants\";\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n\r\n  dispatch({\r\n    type: PRODUCT_LIST_REQUEST,\r\n  });\r\n  try {\r\n    const { data } = await axios.get(`/api/products?keyword=${keyword}`)\r\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\n\r\nexport const detailsProduct = (productId) => async (dispatch) => {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n    try {\r\n      const { data } = await Axios.get(`/api/products/${productId}`);\r\n      dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_DETAILS_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  export const createProduct = () => async (dispatch, getState) => {\r\n    dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n      const { data } = await Axios.post(\r\n        '/api/products',\r\n        {},\r\n        {\r\n          headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        }\r\n      );\r\n      dispatch({\r\n        type: PRODUCT_CREATE_SUCCESS,\r\n        payload: data.product,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({ type: PRODUCT_CREATE_FAIL, payload: message });\r\n    }\r\n  };\r\n\r\n  export const deleteProduct = (productId) => async (dispatch, getState) => {\r\n    dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n      const { data } = Axios.delete(`/api/products/${productId}`, {\r\n        headers: { Authorization: `Bearer ${userInfo.token}` },\r\n      });\r\n      dispatch({ type: PRODUCT_DELETE_SUCCESS });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({ type: PRODUCT_DELETE_FAIL, payload: message });\r\n    }\r\n  };\r\n\r\n  export const updateProduct = (product) => async (dispatch, getState) => {\r\n    dispatch({ type: PRODUCT_UPDATE_REQUEST, payload: product });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n      const { data } = await Axios.put(`/api/products/${product._id}`, product, {\r\n        headers: { Authorization: `Bearer ${userInfo.token}` },\r\n      });\r\n      dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({ type: PRODUCT_UPDATE_FAIL, error: message });\r\n    }\r\n  };"]},"metadata":{},"sourceType":"module"}