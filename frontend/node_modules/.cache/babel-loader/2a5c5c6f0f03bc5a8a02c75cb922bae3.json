{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productCategoryListReducer, productCreateReducer, productDeleteReducer, productDetailsReducer, productListReducer, productReviewCreateReducer, productUpdateReducer } from './reducers/productReducer';\nimport { cartReducer } from './reducers/cartReducer';\nimport { userDeleteReducer, userDetailsReducer, userListReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer, userUpdateReducer } from './reducers/userReducer';\nimport { orderCreateReducer, orderDeliverReducer, orderDetailsReducer, orderListMyReducer, orderListReducer, orderPayReducer } from './reducers/orderReducer';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productCategoryList: productCategoryListReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n  orderDeliver: orderDeliverReducer,\n  orderList: orderListReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/i 5/Desktop/myweb/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productCategoryListReducer","productCreateReducer","productDeleteReducer","productDetailsReducer","productListReducer","productReviewCreateReducer","productUpdateReducer","cartReducer","userDeleteReducer","userDetailsReducer","userListReducer","userLoginReducer","userRegisterReducer","userUpdateProfileReducer","userUpdateReducer","orderCreateReducer","orderDeliverReducer","orderDetailsReducer","orderListMyReducer","orderListReducer","orderPayReducer","reducer","productList","productDetails","productDelete","productCreate","productUpdate","productReviewCreate","productCategoryList","cart","userLogin","userRegister","userDetails","userList","userDelete","userUpdate","userUpdateProfile","orderCreate","orderDetails","orderPay","orderListMy","orderDeliver","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,EAAqCC,oBAArC,EAA2DC,oBAA3D,EAAiFC,qBAAjF,EAAwGC,kBAAxG,EAA4HC,0BAA5H,EAAwJC,oBAAxJ,QAAoL,2BAApL;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,iBAAT,EAA4BC,kBAA5B,EAAgDC,eAAhD,EAAiEC,gBAAjE,EAAmFC,mBAAnF,EAAwGC,wBAAxG,EAAkIC,iBAAlI,QAA2J,wBAA3J;AACA,SAASC,kBAAT,EAA6BC,mBAA7B,EAAkDC,mBAAlD,EAAuEC,kBAAvE,EAA2FC,gBAA3F,EAA6GC,eAA7G,QAAoI,yBAApI;AAEA,MAAMC,OAAO,GAAGzB,eAAe,CAAC;AAC5B0B,EAAAA,WAAW,EAAElB,kBADe;AAE5BmB,EAAAA,cAAc,EAAEpB,qBAFY;AAG5BqB,EAAAA,aAAa,EAAEtB,oBAHa;AAI5BuB,EAAAA,aAAa,EAAExB,oBAJa;AAK5ByB,EAAAA,aAAa,EAAEpB,oBALa;AAM5BqB,EAAAA,mBAAmB,EAAEtB,0BANO;AAO5BuB,EAAAA,mBAAmB,EAAE5B,0BAPO;AAQ5B6B,EAAAA,IAAI,EAAEtB,WARsB;AAS5BuB,EAAAA,SAAS,EAAEnB,gBATiB;AAU5BoB,EAAAA,YAAY,EAAEnB,mBAVc;AAW5BoB,EAAAA,WAAW,EAAEvB,kBAXe;AAY5BwB,EAAAA,QAAQ,EAAEvB,eAZkB;AAa5BwB,EAAAA,UAAU,EAAE1B,iBAbgB;AAc5B2B,EAAAA,UAAU,EAAErB,iBAdgB;AAe5BsB,EAAAA,iBAAiB,EAAEvB,wBAfS;AAgB5BwB,EAAAA,WAAW,EAAEtB,kBAhBe;AAiB5BuB,EAAAA,YAAY,EAAErB,mBAjBc;AAkB5BsB,EAAAA,QAAQ,EAAEnB,eAlBkB;AAmB5BoB,EAAAA,WAAW,EAAEtB,kBAnBe;AAoB5BuB,EAAAA,YAAY,EAAEzB,mBApBc;AAqB5B0B,EAAAA,SAAS,EAAEvB;AArBiB,CAAD,CAA/B;AAwBE,MAAMwB,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAC3BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAD2B,GAE3B,EAFF;AAIA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAC1BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD0B,GAE1B,IAFF;AAIA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACjCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADiC,GAEjC,EAFF;AAGF,MAAMK,YAAY,GAAG;AACnBrB,EAAAA,IAAI,EAAE;AACJsB,IAAAA,SAAS,EAAER,oBADP;AAEJS,IAAAA,eAAe,EAAEH;AAFb,GADa;AAKnBnB,EAAAA,SAAS,EAAE;AAAEuB,IAAAA,QAAQ,EAAEL;AAAZ;AALQ,CAArB;AAQA,MAAMM,UAAU,GAAG,CAACxD,KAAD,CAAnB;AAEA,MAAMyD,KAAK,GAAG5D,WAAW,CACvB0B,OADuB,EAEvB6B,YAFuB,EAGvBnD,mBAAmB,CAACF,eAAe,CAAC,GAAGyD,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productCategoryListReducer, productCreateReducer, productDeleteReducer, productDetailsReducer, productListReducer, productReviewCreateReducer, productUpdateReducer } from './reducers/productReducer'\r\nimport { cartReducer } from './reducers/cartReducer'\r\nimport { userDeleteReducer, userDetailsReducer, userListReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer, userUpdateReducer } from './reducers/userReducer'\r\nimport { orderCreateReducer, orderDeliverReducer, orderDetailsReducer, orderListMyReducer, orderListReducer, orderPayReducer } from './reducers/orderReducer'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productCategoryList: productCategoryListReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    orderList: orderListReducer,\r\n  })\r\n\r\n  const cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : []\r\n\r\n  const userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\n  const shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {}\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}